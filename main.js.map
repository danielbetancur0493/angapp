{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/empleado/gestion-empleado/gestion-empleado.component.ts","./src/app/componentes/empleado/gestion-empleado/gestion-empleado.component.html","./src/app/componentes/empleado/gestion-empleado/listar-empleado/listar-empleado.component.ts","./src/app/componentes/empleado/gestion-empleado/listar-empleado/listar-empleado.component.html","./src/app/componentes/empleado/gestion-empleado/registrar-empleado/registrar-empleado.component.ts","./src/app/componentes/empleado/gestion-empleado/registrar-empleado/registrar-empleado.component.html","./src/app/componentes/form-project/form-project.component.ts","./src/app/componentes/form-project/form-project.component.html","./src/app/componentes/form-segment/form-segment.component.ts","./src/app/componentes/form-segment/form-segment.component.html","./src/app/componentes/listado/listado.component.ts","./src/app/componentes/listado/listado.component.html","./src/app/componentes/project/project.component.ts","./src/app/componentes/project/project.component.html","./src/app/componentes/usuario/login/login.component.ts","./src/app/componentes/usuario/login/login.component.html","./src/app/componentes/usuario/register/register.component.ts","./src/app/componentes/usuario/register/register.component.html","./src/app/componentes/usuario/usuario.component.ts","./src/app/componentes/usuario/usuario.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/interceptor.auth.ts","./src/app/pipes/filtroempleado.pipe.ts","./src/app/servicios/empleado.service.ts","./src/app/servicios/project.service.ts","./src/app/servicios/segment.service.ts","./src/app/servicios/usuario.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoB;AACA;AACmC;AACxB;AACT;AACF;AAC3B;;;AAGhD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,eAAe,EAAC,SAAS,EAAC,MAAM,EAAC;IACrD,EAAC,IAAI,EAAE,SAAS,EAAC,SAAS,EAAC,uFAAgB;QACzC,QAAQ,EAAC;YACC,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,kGAAiB,EAAC;YAC7C,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,yFAAc,EAAC;SACvC;KACX;IACD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAgB,EAAC,WAAW,EAAC,CAAC,4DAAS,CAAC,EAAC;IACtE,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAgB,EAAC,WAAW,EAAC,CAAC,4DAAS,CAAC,EAAC;IACtE,EAAC,IAAI,EAAE,UAAU,EAAC,SAAS,EAAC,0HAAwB,EAAC,WAAW,EAAC,CAAC,4DAAS,CAAC,EAAC;CAC9E,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACG;;;;;;;ICMjC,0EACI;IAAA,yEACI;IAAA,yEACI;IAAA,wEAAqE;IAAA,oEAAQ;IAAA,4DAAI;IACrF,4DAAK;IACL,yEACI;IAAA,wEAAoE;IAAA,kEAAO;IAAA,4DAAI;IACnF,4DAAK;IACL,yEACI;IAAA,wEAAqE;IAAA,oEAAQ;IAAA,4DAAI;IACrF,4DAAK;IAET,4DAAK;IACT,4DAAM;;;IAEF,wEACI;IAAA,uDAAyC;IAAA,gEAAK;IAAA,uDAClD;IAAA,4DAAI;;;IADA,0DAAyC;IAAzC,kHAAyC;IAAK,0DAClD;IADkD,kHAClD;;ADdT,MAAM,YAAY;IAEvB,YAAmB,WAA0B,EAAS,MAAa;QAAhD,gBAAW,GAAX,WAAW,CAAe;QAAS,WAAM,GAAN,MAAM,CAAO;QAEnE,UAAK,GAAG,QAAQ,CAAC;QAEV,SAAI,GAAG,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC;IAJ8B,CAAC;IAMtE,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IAED,YAAY;QACV,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QACzC,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;QAEhD,IAAI,cAAc,GAAG,kEAAU,CAAC,UAAU,EAAC,qBAAqB,EAAC,OAAO,CAAC;QAEzE,IAAG,cAAc,GAAC,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,IAAI,KAAK,IAAI,IAAI,EAAC;YACvD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;SAE9B;aAAI;YACH,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;SAC5C;QAED,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,cAAc,CAAC;IAExC,CAAC;IAED,MAAM;QACJ,IAAG,OAAO,CAAC,wBAAwB,CAAC,EAAC;YACnC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;YAChC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC;YACpC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;SAE9B;IACH,CAAC;;wEArCU,YAAY;4FAAZ,YAAY;QCVzB,sEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAAiE;QAAA,uDAAS;QAAA,4DAAI;QAC9E,4EACI;QAAA,qEAAyC;QAC3C,4DAAS;QACX,yGACI;QAaJ,yEACI;QAAA,oGACI;QAIJ,0EACI;QAAA,0EACI;QAAA,8EACI;QAAA,oEAA0E;QAC9E,4DAAS;QACT,2EACI;QAAA,8EAA2C;QAAnB,qIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC9D,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA+B;QACnC,4DAAM;QACV,4DAAM;;QAzCuE,0DAAS;QAAT,0EAAS;QAIrE,0DAA6C;QAA7C,sGAA6C;QAexB,0DAA6C;QAA7C,sGAA6C;;6FDZtE,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACQ;AACoB;AACc;AACvB;AACS;AACA;AACc;AACqB;AACuB;AACT;AAC7D;AACF;AACA;AAElB;AAEI;AACgC;AAErC;AACuB;AACU;AACE;AACS;AACzB;AACH;AACI;AACJ;;;;;;;;AAqCnD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBART,CAAC,4EAAe,EAAC,0EAAc,EAAC,0EAAc,EAAC,yDAAa,EAAC,0EAAc;QACpF;YACE,OAAO,EAAC,sEAAiB;YACzB,QAAQ,EAAC,yEAAe;YACxB,KAAK,EAAC,IAAI;SACX,CAAC,YAjBK;YACP,uEAAa;YACb,oEAAgB;YAChB,oEAAS;YACT,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,6DAAY;YACZ,6FAAuB;YACvB,wDAAY,CAAC,OAAO,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC;YACxC,4EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,sEAAW,CAAC,UAAU,EAAE,CAAC;SACpF;mIASU,SAAS,mBAjClB,2DAAY;QACZ,uFAAgB;QAChB,qGAAoB;QACpB,uFAAgB;QAChB,sGAAoB;QACpB,2HAAwB;QACxB,kJAA0B;QAC1B,yIAAuB;QACvB,8EAAkB;QAClB,wFAAgB;QAChB,0FAAc;QACd,mGAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,oEAAS;QACT,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,6DAAY;QACZ,6FAAuB;6FAYd,SAAS;cAnCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uFAAgB;oBAChB,qGAAoB;oBACpB,uFAAgB;oBAChB,sGAAoB;oBACpB,2HAAwB;oBACxB,kJAA0B;oBAC1B,yIAAuB;oBACvB,8EAAkB;oBAClB,wFAAgB;oBAChB,0FAAc;oBACd,mGAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,oEAAS;oBACT,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,6DAAY;oBACZ,6FAAuB;oBACvB,wDAAY,CAAC,OAAO,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC;oBACxC,4EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,sEAAW,CAAC,UAAU,EAAE,CAAC;iBACpF;gBACD,SAAS,EAAE,CAAC,4EAAe,EAAC,0EAAc,EAAC,0EAAc,EAAC,yDAAa,EAAC,0EAAc;oBACpF;wBACE,OAAO,EAAC,sEAAiB;wBACzB,QAAQ,EAAC,yEAAe;wBACxB,KAAK,EAAC,IAAI;qBACX,CAAC;gBACJ,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;kEA/BG,uFAAgB,umMADhB,2DAAY;IACZ,uFAAgB;IAChB,qGAAoB;IACpB,uFAAgB;IAChB,sGAAoB;IACpB,2HAAwB;IACxB,kJAA0B;IAC1B,yIAAuB;IAEvB,wFAAgB;IAChB,0FAAc;IACd,mGAAiB,8yBAHjB,8EAAkB;;;;;;;;;;;;;AC5CtB;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,wBAAwB;IAGnC;QADA,gBAAW,GAAQ,kBAAkB,CAAC;IACtB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGANU,wBAAwB;wGAAxB,wBAAwB;QCRrC,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAe;QAAA,4DAAK;QAE5B,4DAAM;QACN,yEACI;QAAA,iFAA2C;QAC/C,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,oFAAiD;QAErD,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QAbM,0DAAe;QAAf,gFAAe;;6FDMd,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICuB1C,qEACI;IAAA,wEAA+C;IAA/B,kWAA8B;IAAC,uDAAmB;IAAA,4DAAK;IACvE,wEAAmC;IAA/B,kWAA8B;IAAC,uDAAe;IAAA,4DAAK;IACvD,wEAAmC;IAA/B,kWAA8B;IAAC,uDAAkB;IAAA,4DAAK;IAC1D,wEAAmC;IAA/B,kWAA8B;IAAC,uDAAiB;IAAA,4DAAK;IACzD,wEAAmC;IAA/B,kWAA8B;IAAC,wDAAc;IAAA,4DAAK;IACtD,sEAAI;IAAA,6EAA8E;IAAjC,yWAAgC;IAAC,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IAC1G,4DAAK;;;IAN8C,0DAAmB;IAAnB,mFAAmB;IAC/B,0DAAe;IAAf,+EAAe;IACf,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAc;IAAd,8EAAc;;ADjBtD,MAAM,uBAAuB;IAElC,YAAmB,KAAqB,EAAS,MAAoB;QAAlD,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAc;IAAI,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,KAAc;QAC3B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,gBAAgB,CAAC,QAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,IAAI,OAAO,CAAC,wCAAwC,CAAC,EAAC;YACpD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAC,kBAAkB,CAAC,CAAC;gBAC3D,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;YAC9B,CAAC,EAAC,GAAG,GAAE;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+BAA+B,EAAC,kBAAkB,CAAC,CAAC;YAC1E,CAAC,CAAC;SACH;IAEH,CAAC;;8FAzBU,uBAAuB;uGAAvB,uBAAuB;QCXpC,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,mEACJ;QAAA,4DAAM;QACN,2EACJ;QADsC,yMAAkC;QAApE,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEP,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,wEAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,yEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,iEAAS;QACb,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,oHACI;;QAQR,4DAAQ;QACZ,4DAAQ;;QA3BsC,0DAAkC;QAAlC,6FAAkC;QAiBpE,2DAA2F;QAA3F,iMAA2F;;6FDZ1F,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEO;AAGa;;;;;;;ICE1D,oEAAuC;IAAA,0EAAe;IAAA,4DAAI;;;IAC1D,oEAAsC;IAAA,0FAA+B;IAAA,4DAAI;;;IAF7E,0EACI;IAAA,yHAAuC;IACvC,yHAAsC;IAE1C,4DAAM;;;IAJiG,wFAA6B;IAC7H,0DAAmC;IAAnC,oGAAmC;IACnC,0DAAkC;IAAlC,mGAAkC;;;IAcrC,oEAAwC;IAAA,0FAA+B;IAAA,4DAAI;;;IAC3E,oEAA2C;IAAA,uDAAmD;IAAA,4DAAI;;;IAAvD,0DAAmD;IAAnD,gIAAmD;;;IAFlG,0EACI;IAAA,0HAAwC;IACxC,0HAA2C;IAC3C,uDACJ;IAAA,4DAAM;;;IAJuG,0FAA+B;IACrI,0DAAoC;IAApC,qGAAoC;IACpC,0DAAuC;IAAvC,wGAAuC;IAC1C,0DACJ;IADI,iHACJ;;;IAOI,oEAAsC;IAAA,0EAAe;IAAA,4DAAI;;;IACzD,oEAAmC;IAAA,uFAA4B;IAAA,4DAAI;;;IAFvE,0EACI;IAAA,0HAAsC;IACtC,0HAAmC;IAEvC,4DAAM;;;IAJ8F,uFAA4B;IACzH,0DAAkC;IAAlC,mGAAkC;IAClC,0DAA+B;IAA/B,gGAA+B;;ADrBvC,MAAM,0BAA0B;IAIrC,YAAmB,KAAqB,EAAU,GAAe,EAAU,MAAoB;QAA5E,UAAK,GAAL,KAAK,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,WAAM,GAAN,MAAM,CAAc;QAiD/F,cAAS,GAAU,EAAE;QACrB,cAAS,GAAU,EAAE;IAhDrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,UAAU,EAAC,CAAC,CAAC,CAAC;YACd,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACzE,SAAS,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACrD,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5F,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;SAClD,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK;QAEnD,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,EAAC;YAC/E,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAI;YACH,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IACD,eAAe;QACb,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAChC,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAC,kBAAkB,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC,EAAC,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,wBAAwB,EAAC,kBAAkB,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAChC,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAC,kBAAkB,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC,EAAC,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAC,kBAAkB,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;IAMD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACnD,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;IACtD,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;IACrD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC;IAClD,CAAC;;oGAnEU,0BAA0B;0GAA1B,0BAA0B;QCZvC,0EACI;QADwC,sJAAY,cAAU,IAAC;QAC/D,yEACI;QAAA,yEACI;QAAA,sEACA;QAAA,sEACJ;QAAA,4DAAM;QACN,sHACI;QAIR,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACN,wHACI;QAIR,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACN,wHACI;QAIR,4DAAM;QACN,0EACI;QAAA,6EAA4G;QAAA,oEAA0B;QAAC,oEAAO;QAAA,4DAAS;QAC3J,4DAAM;QAGV,4DAAO;;QA1CD,6FAAqC;QAIkC,0DAAqC;QAArC,6FAAqC;QAErG,0DAAwD;QAAxD,8HAAwD;QAQV,0DAAwC;QAAxC,gGAAwC;QAKrB,0DAAuC;QAAvC,+FAAuC;QAExG,0DAA8D;QAA9D,oIAA8D;QAQE,0DAAoC;QAApC,4FAAoC;QAEpG,0DAAqD;QAArD,2HAAqD;QAOpC,0DAA4C;QAA5C,oGAA4C;;6FD1B7D,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;IC4BjD,6EAAmG;IAArE,4UAA8B;IAAuC,+DAAI;IAAA,4DAAS;;ADlBjH,MAAM,oBAAoB;IAG/B,YAAoB,IAAmB,EAAS,MAAoB;QAAhD,SAAI,GAAJ,IAAI,CAAe;QAAS,WAAM,GAAN,MAAM,CAAc;QADpE,WAAM,GAAW,IAAI,CAAC;IACkD,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,CAAS;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAEd,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAC,SAAS,CAAC,CAAC;QACzD,CAAC,EAAC,GAAG,GAAE;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAC,SAAS,CAAC,CAAC;QAC5D,CAAC,CAAC;IACJ,CAAC;;wFAjBU,oBAAoB;oGAApB,oBAAoB;QCVjC,0EACI;QAAA,8EACI;QAAA,yEACI;QAAA,wEAAO;QAAA,oEAAS;QAAA,4DAAQ;QACxB,sEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,wEAAO;QAAA,oEAAS;QAAA,4DAAQ;QACxB,sEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,uEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,uEACJ;QAAA,4DAAM;QACV,4DAAW;QACX,0EACI;QAAA,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,4EACJ;QAD2E,iMAA4B;;QAAnG,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACJ;QAD+D,gMAA2B;QAAtF,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,yHAAmG;QACvG,4DAAM;QAEV,4DAAO;;QA9BO,0DAAmB;QAAnB,gFAAmB;QAGmB,0DAAyB;QAAzB,sFAAyB;QAIzB,0DAAyB;QAAzB,sFAAyB;QAIzB,0DAAyB;QAAzB,sFAAyB;QAIzB,0DAAyB;QAAzB,sFAAyB;QAKgD,0DAA8C;QAA9C,gLAA8C;QAA5F,uFAA4B;QAIxC,0DAA2B;QAA3B,sFAA2B;QAG9E,0DAAqB;QAArB,mFAAqB;;6FDlBxB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;6LAEU,IAAI;kBAAZ,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;IC+DjD,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IAFW,yGAAgC;IAC7C,0DACJ;IADI,sFACJ;;AD7DR,kEAAkE;AAQ3D,MAAM,oBAAoB;IAgB/B,YAAoB,IAAmB,EAAS,IAAqB;QAAjD,SAAI,GAAJ,IAAI,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAiB;QACnE,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,GAAG,GAAE,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;IAClB,CAAC;IAEF,QAAQ,KAAW,CAAC;IAEpB,UAAU,CAAC,GAAW;QACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAEpC,CAAC;IAED,UAAU,CAAC,GAAW;QACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAClC,4BAA4B;QAE5B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC,EAAC,GAAG,CAAC,CAAC;IAE7D,CAAC;IAED,aAAa,CAAC,GAAW;QACvB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAEjD,IAAI,CAAC,YAAY,CAAC,6BAA6B,EAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,GAAG,CAAC,MAAM,GAAC,GAAG,EAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,kCAAkC,EAAC,QAAQ,CAAC,CAAC;aAEhE;QACH,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;YACnB,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;SACzB;IAEH,CAAC;IAED,YAAY,CAAC,GAAU,EAAC,MAAa;QACnC,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC;QACrB,UAAU,CAAC,GAAE,EAAE;YACb,IAAI,CAAC,GAAG,GAAC,EAAE,CAAC;YACV,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACrB,CAAC,EAAC,IAAI,CAAC,CAAC;IACV,CAAC;;wFA9EU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEACI;QAAA,uEAAuD;QAApD,uIAAS,oBAAgB,IAAC;QAA0B,iEAAM;QAAA,4DAAI;QACrE,4DAAM;QACN,8EACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EAAgD;QAAA,uEAAY;QAAA,4DAAQ;QACxE,4DAAM;QACN,yEACI;QAAA,2EACJ;QADuE,oMAAgC;;QAAnG,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAA6C;QAAA,oEAAQ;QAAA,4DAAQ;QACjE,4DAAM;QACN,0EACI;QAAA,4EACJ;QAD6E,kMAA6B;QAAtG,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAA2C;QAAA,mEAAO;QAAA,4DAAQ;QAC9D,4DAAM;QACN,0EACI;QAAA,6EACJ;QAD2E,gMAA2B;QAAlG,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAW;QACX,0EACI;QAAA,0EACI;QAAA,6EAA2C;QAAA,0EAAc;QAAA,4DAAQ;QACrE,4DAAM;QACN,0EACI;QAAA,6EACJ;QADkE,mMAA8B;;QAA5F,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAyC;QAAA,wEAAY;QAAA,4DAAQ;QACjE,4DAAM;QACN,0EACI;QAAA,6EACJ;QADgE,iMAA4B;;QAAxF,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAA+C;QAAA,wEAAY;QAAA,4DAAQ;QACvE,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,wDAAS;QAAA,4DAAO;QAC/C,6EACJ;QADwE,qMAAgC;QAApG,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,+EAEI;QAAA,8EAAuF;QAA/E,6IAAS,0BAAkB,IAAC;QAAmD,gEAAI;QAAA,4DAAS;QACpG,8EAAyF;QAAjF,6IAAS,0BAAkB,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QACrG,8EAAyF;QAAjF,6IAAS,6BAAqB,IAAC;QAAkD,kEAAM;QAAA,4DAAS;QAC5G,4DAAW;QAEX,mHACI;QAGR,4DAAM;QACV,4DAAM;;QAjEI,0DAAmB;QAAnB,gFAAmB;QAMmF,0DAAwD;QAAxD,2LAAwD;QAAzF,2FAAgC;QAQI,0DAA2B;QAA3B,iGAA2B;QAAzD,wFAA6B;QAQH,0DAAyB;QAAzB,+FAAyB;QAArD,sFAA2B;QAST,0DAAsD;QAAtD,yLAAsD;QAArF,yFAA8B;QAQH,0DAAoD;QAApD,uLAAoD;QAAjF,uFAA4B;QASrD,0DAAS;QAAT,mFAAS;QAC6D,0DAA8B;QAA9B,oGAA8B;QAA/D,2FAAgC;QAI9F,0DAAoB;QAApB,iFAAoB;QAEwC,0DAAoB;QAApB,iFAAoB;QAClB,0DAAoB;QAApB,iFAAoB;QACpB,0DAAoB;QAApB,iFAAoB;QAGvF,0DAAW;QAAX,yEAAW;;6FDnDX,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;gNAGU,MAAM;kBAAd,mDAAK;YACG,GAAG;kBAAX,mDAAK;;;;;;;;;;;;;;AEfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC4B;AAGjC;AAEd;;;;ICGX,6EAAqE;IAAA,uDAAO;IAAA,4DAAS;;;IAAhC,sFAAe;IAAC,0DAAO;IAAP,yEAAO;;;IAMhF,qEAAiD;IAAA,uDAAK;IAAA,4DAAK;;;IAAV,0DAAK;IAAL,qEAAK;;;IAKlD,oEAAgJ;;;;IAAhI,oIAAgE;;;;IAChF,yEAA2L;IAAhD,sZAAuB;IAAoB,4DAAK;;;;IAA3K,oIAAgE;;;IAChF,oEAAgJ;;;;IAAhI,qIAAgE;;;IAJpF,qEACI;IAAA,yEAA4B;IAAA,oEAAG;IAAA,oEAAS;IAAA,4DAAI;IAAC,uDAAiB;IAAA,4DAAK;IACnE,iHAA2I;IAC3I,iHAAsL;IACtL,iHAA2I;IAC/I,4DAAK;;;;IAJ4C,0DAAiB;IAAjB,2FAAiB;IACmB,0DAAyD;IAAzD,oIAAyD;IACzD,0DAAyD;IAAzD,oIAAyD;IACzD,0DAAyD;IAAzD,oIAAyD;;ADPvJ,MAAM,gBAAgB;IAuB3B,YAAoB,IAAmB;QAAnB,SAAI,GAAJ,IAAI,CAAe;QAjBvC,WAAM,GAAW,EAAC,WAAW,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAclI,cAAS,GAAG,IAAI,4CAAO,EAAa,CAAC;QAI3C,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,kEAAU,CAAC,IAAI,CAAC,QAAQ,EAAC,YAAY,EAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAC,EAAE,CAAC,CAAC;IAGnD,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,CAAC,CAAQ;QACd,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,KAAY,EAAC,MAAW,EAAC,IAAS;QACjD,IAAI,GAAU,CAAC;QAEf,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAGtB,gDAAgD;QAChD,QAAQ,KAAK,EAAE;YACb,KAAK,CAAC;gBACJ,uBAAuB;gBACvB,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,CAAC;gBACN,+BAA+B;gBAC7B,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACxC,MAAM;YACR,KAAK,CAAC;gBACJ,wBAAwB;gBACxB,GAAG,GAAG,EAAE,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACzB,MAAM;SACT;QAED,2DAA2D;QAC3D,SAAS;QACT,OAAO,GAAG,CAAC;IACb,CAAC;IAED,aAAa,CAAC,KAAY,EAAC,QAAe;QAExC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IACnG,CAAC;IAGD,OAAO,CAAC,IAAY;QAClB,wBAAwB;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,+BAA+B;IAEjC,CAAC;;gFAlFU,gBAAgB;gGAAhB,gBAAgB,4GALjB,CAAC,yFAAoB,CAAC;QCVlC,yEACI;QAAA,yEACI;QAAA,iFAAsF;QAC1F,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACA;QADkD,mLAAmB,+FAA0I,0CAA6B,IAAvK;;;;QAArE,4DACA;QAAA,4EACQ;QAD8C,uLAAsB,gGAAkB,0CAA6B,IAA/C;QACpE,6EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,oHAAqE;QACvE,4DAAS;QACnB,4DAAM;QACN,4EACI;QAAA,yEACI;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,6GAAiD;QACrD,4DAAQ;QACR,yEACI;QAAA,6GACI;QAKR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QAGV,4DAAM;;QA3BoB,0DAAiB;QAAjB,8EAAiB;QAIuC,0DAAqC;QAArC,uKAAqC;QAAC,wKAAwC;QAAC,wKAAwC;QAA3I,8EAAmB;QACf,0DAAsB;QAAtB,iFAAsB;QAE5D,0DAA4C;QAA5C,oFAA4C;QAMpD,0DAA4C;QAA5C,oFAA4C;QAG5C,0DAA0B;QAA1B,8EAA0B;;6FDHjC,gBAAgB;cAN5B,uDAAS;eAAC;gBACT,SAAS,EAAC,CAAC,yFAAoB,CAAC;gBAChC,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;IC6BlC,yEACI;IAD8B,wVAA2B;IACzD,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,wDAAsC;;IAAA,4DAAK;IAC/C,sEAAI;IAAA,wDAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC9B,4DAAK;;;IAPG,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAsC;IAAtC,kKAAsC;IACtC,0DAAe;IAAf,+EAAe;IACf,0DAAiB;IAAjB,iFAAiB;;ADzBlC,MAAM,gBAAgB;IAS3B,YAAoB,IAAmB;QAAnB,SAAI,GAAJ,IAAI,CAAe;QALvC,UAAK,GAAW,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;IAKxE,CAAC;IAE5C,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC;QACtF,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,CAAQ;QACd,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACnD,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,KAAK;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,WAAW,CAAC,CAAS;QACnB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;;gFApCU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EAAqC;QAAA,iEAAM;QAAA,4DAAO;QACtD,4DAAM;QACN,2EACA;QADwC,6LAA6B;QAArE,4DACA;QAAA,2EACA;QADwC,6LAA6B;QAArE,4DACA;QAAA,2EACA;QADwC,6LAA6B;QAArE,4DACA;QAAA,4EACA;QADwC,8LAA6B;QAArE,4DACA;QAAA,2EACI;QAAA,8EAAgF;QAAxC,yIAAS,mBAAe,IAAC;QAAe,kEAAM;QAAA,4DAAS;QACnG,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QACN,6EACI;QAAA,yEACI;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACrB,4DAAQ;QACR,yEACI;QAAA,+GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,mFAAoD;QACxD,4DAAM;QACV,4DAAM;;QArCkD,0DAA6B;QAA7B,wFAA6B;QAC7B,0DAA6B;QAA7B,wFAA6B;QAC7B,0DAA6B;QAA7B,wFAA6B;QAC7B,0DAA6B;QAA7B,wFAA6B;QAmBjE,2DAA6B;QAA7B,iFAA6B;QAavB,0DAAc;QAAd,2EAAc;;6FD/B3B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;;;;;;;;;;;AEViD;;;;;;;;ICWlC,oEAAkE;IAAA,0EAAe;IAAA,4DAAI;;;IACrF,oEAAiE;IAAA,0FAA+B;IAAA,4DAAI;;;IAFxG,0EACI;IAAA,8GAAkE;IAClE,8GAAiE;IACrE,4DAAM;;;IAHkK,6GAAuD;IACxN,0DAA8D;IAA9D,yHAA8D;IAC9D,0DAA6D;IAA7D,wHAA6D;;;IAShE,oEAAmE;IAAA,0EAAe;IAAA,4DAAI;;;IACtF,oEAAiH;IAAA,8GAA8C;IAAA,4DAAI;;;IAFvK,0EACI;IAAA,8GAAmE;IACnE,8GAAiH;IACrH,4DAAM;;;IAHsK,8GAAwD;IAC7N,0DAA+D;IAA/D,0HAA+D;IAC/D,0DAA6G;IAA7G,0KAA6G;;ADVzH,MAAM,cAAc;IAGzB,YAAmB,cAA6B,EAAS,MAAoB,EAAS,MAAa;QAAhF,mBAAc,GAAd,cAAc,CAAe;QAAS,WAAM,GAAN,MAAM,CAAc;QAAS,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAGxG,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;YACtB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,KAAK,CAAC;YACvC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAC,GAAG,CAAC,UAAU,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;YAC1B,oEAAoE;QACtE,CAAC,EAAC,CAAC,GAAO,EAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4CAA4C,EAAC,eAAe,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAC,eAAe,CAAC;QAEhD,CAAC,CAAC;IACJ,CAAC;IAEK,MAAM,CAAC,GAAW;;YAEtB,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;YACnE,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC;KAAA;IAEK,UAAU,CAAC,KAAa;;YAC5B,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;KAAA;;4EAjCU,cAAc;8FAAd,cAAc;QCZ3B,yEACI;QAAA,yEACI;QAAA,0EACI;QAD0G,0IAAY,cAAe,IAAC;QACtI,uEAAoB;QAAA,kEAAuE;QAAA,4DAAI;QAC/F,yEACI;QAAA,yEACI;QAAA,0EAA+B;QAAA,kEAAkC;QAAA,4DAAO;QAC5E,4DAAM;QACN,sEACJ;QAAA,4DAAM;QACN,6GACI;QAGJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAA6B;QAAA,4DAAO;QACvE,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,6GACI;QAIJ,8EAAsH;QAAA,+EAAc;QAAA,4DAAS;QAEjJ,4DAAO;QACP,2EACI;QAAA,2EACI;QAAA,qFAAmB;QAAA,yEAAiF;QAAA,sEAAU;QAAA,4DAAI;QACtH,4DAAM;QACN,2EACI;QAAA,iGACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnC8D,0DAAiD;QAAjD,yGAAiD;QAQpG,0DAAsI;QAAtI,6LAAsI;QAUtI,0DAAyI;QAAzI,gMAAyI;QAK/F,0DAAwD;QAAxD,gHAAwD;;6FDbtG,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICWlC,oEAA4D;IAAA,0EAAe;IAAA,4DAAI;;;IAC/E,oEAA2D;IAAA,0FAA+B;IAAA,4DAAI;;;IAFlG,0EACI;IAAA,iHAA4D;IAC5D,iHAA2D;IAC/D,4DAAM;;;IAHmJ,wGAAkD;IACpM,0DAAwD;IAAxD,oHAAwD;IACxD,0DAAuD;IAAvD,mHAAuD;;;IAS1D,oEAA2D;IAAA,0EAAe;IAAA,4DAAI;;;IAC9E,oEAA0D;IAAA,0FAA+B;IAAA,4DAAI;;;IAFjG,0EACI;IAAA,iHAA2D;IAC3D,iHAA0D;IAC9D,4DAAM;;;IAHgJ,uGAAiD;IAChM,0DAAuD;IAAvD,mHAAuD;IACvD,0DAAsD;IAAtD,kHAAsD;;;IASzD,oEAA0D;IAAA,0EAAe;IAAA,4DAAI;;;IAC7E,oEAAyD;IAAA,0FAA+B;IAAA,4DAAI;;;IAC5F,oEAAuD;IAAA,uFAA4B;IAAA,4DAAI;;;IAH3F,0EACI;IAAA,iHAA0D;IAC1D,iHAAyD;IACzD,iHAAuD;IAC3D,4DAAM;;;IAJ8I,sGAAgD;IAC7L,0DAAsD;IAAtD,kHAAsD;IACtD,0DAAqD;IAArD,iHAAqD;IACrD,0DAAmD;IAAnD,+GAAmD;;;IAStD,oEAA6D;IAAA,0EAAe;IAAA,4DAAI;;;IAChF,oEAA4D;IAAA,0FAA+B;IAAA,4DAAI;;;IAFnG,0EACI;IAAA,iHAA6D;IAC7D,iHAA4D;IAChE,4DAAM;;;IAHuJ,yGAAmD;IACzM,0DAAyD;IAAzD,qHAAyD;IACzD,0DAAwD;IAAxD,oHAAwD;;;IAS3D,oEAA6D;IAAA,0EAAe;IAAA,4DAAI;;;IAChF,oEAAsG;IAAA,8GAA8C;IAAA,4DAAI;;;IACxJ,oEAA4D;IAAA,iMAAuH;IAAA,4DAAI;;;IAH3L,0EACI;IAAA,iHAA6D;IAC7D,iHAAsG;IACtG,iHAA4D;IAChE,4DAAM;;;IAJuJ,yGAAmD;IACzM,0DAAyD;IAAzD,qHAAyD;IACzD,0DAAkG;IAAlG,gKAAkG;IAClG,0DAAwD;IAAxD,oHAAwD;;;IAS3D,oEAAoE;IAAA,0EAAe;IAAA,4DAAI;;;IACvF,oEAA4D;IAAA,iMAAuH;IAAA,4DAAI;;;IACvL,oEAAkE;IAAA,4FAA4B;IAAA,4DAAI;;;IAHtG,0EACI;IAAA,iHAAoE;IACpE,iHAA4D;IAC5D,iHAAkE;IACtE,4DAAM;;;IAJ2K,gHAA0D;IACpO,0DAAgE;IAAhE,4HAAgE;IAChE,0DAAwD;IAAxD,oHAAwD;IACxD,0DAA8D;IAA9D,0HAA8D;;ADxD1E,MAAM,iBAAiB;IAE5B,YAAmB,cAA6B,EAAU,MAAoB;QAA3D,mBAAc,GAAd,cAAc,CAAe;QAAU,WAAM,GAAN,MAAM,CAAc;IAAI,CAAC;IAEnF,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAO,EAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAG,GAAG,CAAC,SAAS,EAAC;gBACf,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC;aACvD;iBAAI;gBAEH,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACxB,QAAQ,IAAI,CAAC,IAAI,EAAE;wBACjB,KAAK,mBAAmB;4BACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gCAAgC,EAAC,kBAAkB,CAAC;4BACxE,MAAM;wBACR,KAAK,gBAAgB;4BACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qCAAqC,EAAC,kBAAkB,CAAC;4BAC7E,MAAM;wBACR;4BACE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kDAAkD,EAAC,kBAAkB,CAAC;4BACxF,MAAM;qBACT;gBACH,CAAC,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFA9BU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACI;QAAA,yEACI;QAAA,0EACI;QADoG,6IAAY,cAAe,IAAC;QAChI,uEAAmB;QAAA,kEAAqE;QAAA,4DAAI;QAC5F,yEACI;QAAA,yEACI;QAAA,0EAA+B;QAAA,kEAAkC;QAAA,4DAAO;QAC5E,4DAAM;QACN,sEACJ;QAAA,4DAAM;QACN,gHACI;QAGJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAAiC;QAAA,4DAAO;QAC3E,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,gHACI;QAGJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAA4B;QAAA,4DAAO;QACtE,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,gHACI;QAIJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAAgC;QAAA,4DAAO;QAC1E,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,gHACI;QAGJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAA6B;QAAA,4DAAO;QACvE,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,gHACI;QAIJ,0EACI;QAAA,0EACI;QAAA,2EAA+B;QAAA,oEAA+B;QAAA,4DAAO;QACzE,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,gHACI;QAIJ,8EAAgH;QAAA,uEAAW;QAAA,4DAAS;QACxI,4DAAO;QACX,4DAAM;QACV,4DAAM;;QApE2D,0DAA8C;QAA9C,sGAA8C;QAQ9F,0DAAuH;QAAvH,8KAAuH;QAUvH,0DAAoH;QAApH,2KAAoH;QAUpH,0DAAiH;QAAjH,wKAAiH;QAWjH,0DAA0H;QAA1H,iLAA0H;QAU1H,0DAA0H;QAA1H,iLAA0H;QAW1H,0DAA+I;QAA/I,sMAA+I;QAKxG,0DAAqD;QAArD,6GAAqD;;6FD1DhG,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,2EAA+B;;6FDOlB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,SAAS;IAEpB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAE,CAAC;IACpC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QACzC,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;QAEhD,IAAG,KAAK,IAAE,IAAI,IAAI,UAAU,GAAC,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;YAClD,OAAO,IAAI,CAAC;aACR;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACxC,OAAO,KAAK;SACb;IACH,CAAC;;kEAhBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGR;;;AAI5B,MAAM,eAAe;IAExB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAEjC,CAAC;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,IAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAC;YACrC,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,SAAS,GAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACnF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,0DAAG,CACC,IAAI,CAAC,EAAE,GAAG,CAAC,EACX,GAAG,CAAC,EAAE;gBACF,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACjB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;oBAChC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC;oBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;iBAC9C;YACL,CAAC,CACJ,CACJ;SACJ;aAAI;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;SACnC;IACL,CAAC;;8EA1BQ,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAoD;;AAK7C,MAAM,kBAAkB;IAE7B,SAAS,CAAC,KAAU,EAAE,KAAY,EAAE,IAAW;QAC7C,IAAG,CAAC,KAAK;YAAC,OAAO,IAAI,CAAC;QACtB,IAAG,CAAC,IAAI;YAAC,OAAO,KAAK,CAAC;QACtB,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClG,CAAC;;oFANU,kBAAkB;sHAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,kDAAI;eAAC;gBACJ,IAAI,EAAE,gBAAgB;aACvB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIkB;;;AAKtD,MAAM,eAAe;IAU1B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAP1B,eAAU,GAAG,qEAAW,CAAC,WAAW;IAON,CAAC;IAEvC,YAAY;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,cAAc;QACZ,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAiB,CAAC;IAC9F,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC;IACtF,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IAC3E,CAAC;;8EA3BU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEkB;;;AAStD,MAAM,cAAc;IAKzB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAJ3B,YAAO,GAAU,qEAAW,CAAC,UAAU,CAAC;IAIX,CAAC;IAE/B,WAAW,CAAC,MAAuB;QACxC,IAAI,MAAM,GAAG,EAAC,cAAc,EAAC,kBAAkB,EAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC;IACxE,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,IAAI,MAAM,GAAG,EAAC,cAAc,EAAC,kBAAkB,EAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,iBAAiB,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC;IAE7E,CAAC;;4EAlBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAHb,MAAM;6FAGP,cAAc;cAJ1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGkB;;;AAUtD,MAAM,cAAc;IASzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAR5B,YAAO,GAAU,qEAAW,CAAC,UAAU,CAAC;IAUhD,CAAC;IAEM,kBAAkB,CAAC,WAAgB,EAAC,QAAe,EAAC,MAAa;QACtE,eAAe;QACf,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QACpC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;QAE7C,IAAI,SAAS,CAAC;QACd,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAEzB,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,SAAS,GAAG,SAAS,GAAC,GAAG,GAAC,QAAQ,CAAC;SAEpC;aAAM;YACL,SAAS,GAAG,SAAS,GAAC,GAAG,CAAC;SAC3B;QACD,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,SAAS,GAAG,SAAS,GAAC,OAAO,GAAE,WAAW,CAAC,YAAY,EAAE,CAAC;SAC3D;aAAM;YACL,SAAS,GAAG,SAAS,GAAC,OAAO,CAAC;SAC/B;QACD,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,SAAS,GAAG,SAAS,GAAC,UAAU,GAAC,MAAM,CAAC;SACzC;aAAM;YACL,SAAS,GAAG,SAAS,GAAC,UAAU,CAAC;SAClC;QAED;;;;;;;;;;;;;;;;UAgBE;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,SAAS,CAAC,CAAC;IACzC,CAAC;IAIQ,kBAAkB,CAAC,GAAW;QACnC,IAAI,SAAS,CAAC;QACd,IAAI,MAAM,GAAG,EAAC,cAAc,EAAC,kBAAkB,EAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAC9B,SAAS,GAAG,IAAI,CAAC,OAAO,GAAC,SAAS,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;QAClE,CAAC,CAAC,CAAC;IAEL,CAAC;IAEM,kBAAkB,CAAC,GAAW;QACnC,IAAI,SAAS,CAAC;QACd,IAAI,MAAM,GAAG,EAAC,cAAc,EAAC,kBAAkB,EAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAC9B,SAAS,GAAG,IAAI,CAAC,OAAO,GAAC,SAAS,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;QAElE,CAAC,CAAC;IACJ,CAAC;IAEM,qBAAqB,CAAC,GAAW;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,MAAM,GAAG,EAAC,cAAc,EAAC,kBAAkB,EAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAC9B,SAAS,GAAG,IAAI,CAAC,OAAO,GAAC,SAAS,CAAC;QAEnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC;IAC1D,CAAC;;4EA1FU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEsC;AAEpB;;;;AAMtD,MAAM,cAAc;IACzB,YAAoB,IAAe,EAAS,MAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAW;QAAS,WAAM,GAAN,MAAM,CAAY;QAErD,eAAU,GAAG,qEAAW,CAAC,UAAU;QAEnC,eAAU,GAAG,qEAAW,CAAC,gBAAgB;QAGlD,kBAAa,GAAO,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAEtF,iBAAY,GAAa,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACzC,OAAO,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnG,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAClG,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,EAAC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3E,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,4CAA2C,CAAC,CAAC;YAC/H,eAAe,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC3C,EACD;YACE,SAAS,EAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;SACjD,CAAC;QAEF,oBAAe,GAAa,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAC5C,OAAO,EAAC,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,OAAO,CAAC,qEAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACpG,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACrF,CAAC;IAxBgE,CAAC;IA0BnE,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC9C,CAAC;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAC7C,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC5C,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;IAC/C,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;IAC/C,CAAC;IACD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC;IACtD,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC;IACjD,CAAC;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;IAClD,CAAC;IAED,sBAAsB,CAAC,SAAmB;QACxC,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE9C,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI;YAC1C,IAAG,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAC;gBACzB,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;aAC9B;iBAAI;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aACrB;IAEH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC1C,kCAAkC;QAElC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;QAE5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,EAAC,IAAI,CAAC,OAAO,CAAC;IAE/D,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAC,EAAC,OAAO,EAAC,EAAC,eAAe,EAAC,SAAS,GAAC,KAAK,EAAC,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAC/F,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;YACtC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;;4EAhGU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,UAAU,EAAE,iCAAiC;IAC7C,UAAU,EAAE,iCAAiC;IAC7C,WAAW,EAAE,yCAAyC;IACtD,UAAU,EAAE,wCAAwC;IACpD,gBAAgB,EAAE,8CAA8C;IAChE,OAAO,EAAC,cAAc;IACtB,OAAO,EAAC,UAAU;IAClB,MAAM,EAAC,4EAA4E;IACnF,SAAS,EAAC,gBAAgB;CAC3B,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACxBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectComponent } from './componentes/project/project.component';\nimport { ListadoComponent } from './componentes/listado/listado.component';\nimport { GestionEmpleadoComponent } from './componentes/empleado/gestion-empleado/gestion-empleado.component';\nimport { RegisterComponent } from './componentes/usuario/register/register.component';\nimport { LoginComponent } from './componentes/usuario/login/login.component';\nimport { UsuarioComponent } from './componentes/usuario/usuario.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'usuario/login',pathMatch:'full'},\n  {path: 'usuario',component:UsuarioComponent,\n    children:[\n              {path:'registro',component:RegisterComponent},\n              {path:'login',component:LoginComponent}\n             ]\n  },\n  {path: 'segment', component: ListadoComponent,canActivate:[AuthGuard]},\n  {path: 'project', component: ProjectComponent,canActivate:[AuthGuard]},\n  {path: 'empleado',component:GestionEmpleadoComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { UsuarioService } from './servicios/usuario.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  constructor(public userservice:UsuarioService,private router:Router){}\n  \n  title = 'AppOne';\n\n  public user = {Nombre:null,Email:null};\n\n  ngOnInit(): void {\n    this.viewDataUser()\n  }\n\n  viewDataUser(): void{\n    var token = localStorage.getItem(\"token\")\n    var expiration = localStorage.getItem(\"validTo\")\n\n    var expirationDate = formatDate(expiration,'yyyy-MM-ddTh:mm:ssz','en-US')\n\n    if(expirationDate>Date.now().toString() && token != null){\n      console.log('fecha superior')\n\n    }else{\n      console.log('fecha inferior o no coincide')\n    }\n\n    console.log(expiration,expirationDate)\n\n  }\n\n  LogOut(){\n    if(confirm(\"¿Deseas cerrar Sesión?\")){\n      localStorage.removeItem('token')\n      localStorage.removeItem('validTo')\n      this.user = {Nombre:null,Email:null}\n      this.router.navigateByUrl('')\n      \n    }\n  }\n\n  \n}\n","<div>\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div class=\"container-fluid\">\n            <a routerLink=\"/\" routerLinkActive=\"active\" class=\"navbar-brand\">{{title}}</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n            <div *ngIf=\"this.userservice.perfilusuario.Nombre\" class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/segment\" routerLinkActive=\"active\"> Segment </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/project\" routerLinkActive=\"active\">Project</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/empleado\" routerLinkActive=\"active\">Empleado</a>\n                    </li>\n\n                </ul>\n            </div>\n            <div class=\"form-inline my-2 my-lg-0\">\n                <p class=\"text-light\" *ngIf=\"this.userservice.perfilusuario.Nombre\">\n                    {{this.userservice.perfilusuario.Nombre}}<br> {{this.userservice.perfilusuario.Email}}\n                </p>\n\n\n                <div class=\"btn-group\">\n                    <div ngbDropdown class=\"text-end\" display=\"dynamic\">\n                        <button class=\"btn \" id=\"dropdownBasic1\" ngbDropdownToggle>\n                            <i class=\"fa fa-user-circle fa-2x text-light px-2\" aria-hidden=\"true\"></i>\n                        </button>\n                        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"dropdown-menu dropdown-menu-lg-end\">\n                            <button ngbDropdownItem (click)=\"LogOut()\">Logout</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </nav>\n    <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListadoComponent } from './componentes/listado/listado.component';\nimport { FormSegmentComponent } from './componentes/form-segment/form-segment.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ProjectComponent } from './componentes/project/project.component';\nimport { FormProjectComponent } from './componentes/form-project/form-project.component';\nimport { GestionEmpleadoComponent } from './componentes/empleado/gestion-empleado/gestion-empleado.component';\nimport { RegistrarEmpleadoComponent } from './componentes/empleado/gestion-empleado/registrar-empleado/registrar-empleado.component';\nimport { ListarEmpleadoComponent } from './componentes/empleado/gestion-empleado/listar-empleado/listar-empleado.component';\nimport { EmpleadoService } from './servicios/empleado.service';\nimport { ProjectService } from './servicios/project.service';\nimport { SegmentService } from './servicios/segment.service';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { FiltroempleadoPipe } from './pipes/filtroempleado.pipe';\nimport { UsuarioComponent } from './componentes/usuario/usuario.component';\nimport { LoginComponent } from './componentes/usuario/login/login.component';\nimport { RegisterComponent } from './componentes/usuario/register/register.component';\nimport { UsuarioService } from './servicios/usuario.service';\nimport {AuthInterceptor} from './guards/interceptor.auth';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListadoComponent,\n    FormSegmentComponent,\n    ProjectComponent,\n    FormProjectComponent,\n    GestionEmpleadoComponent,\n    RegistrarEmpleadoComponent,\n    ListarEmpleadoComponent,\n    FiltroempleadoPipe,\n    UsuarioComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({progressBar:true}),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [EmpleadoService,ProjectService,SegmentService,ToastrService,UsuarioService,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:AuthInterceptor,\n      multi:true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Empleado } from '../../../models/empleado';\n\n@Component({\n  selector: 'app-gestion-empleado',\n  templateUrl: './gestion-empleado.component.html',\n  styleUrls: ['./gestion-empleado.component.scss']\n})\nexport class GestionEmpleadoComponent implements OnInit {\n  \n  titleheader:string='Gestion empleado';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row p-3\">\n    <div class=\"col-12 text-center\">\n        <h2>{{titleheader}}</h2>\n\n    </div>\n    <div class=\"col-8\">\n        <app-listar-empleado></app-listar-empleado>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"border border-success p-3 rounded\">\n            <app-registrar-empleado></app-registrar-empleado>\n\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmpleadoService } from '../../../../servicios/empleado.service';\nimport { Empleado } from '../../../../models/empleado';\nimport { FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-listar-empleado',\n  templateUrl: './listar-empleado.component.html',\n  styleUrls: ['./listar-empleado.component.scss']\n})\nexport class ListarEmpleadoComponent implements OnInit {\n\n  constructor(public gserv:EmpleadoService,private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n    this.gserv.listaEmpleados();\n  }\n\n  editarempleado(emplo:Empleado){\n    console.log('editarempleado')\n    this.gserv.FormEmpleado.patchValue(emplo);\n  }\n\n  eliminarempleado(empleado:Empleado){\n    console.log('eliminarempleado')\n    if (confirm(\"¿Estas seguro de eliminar el empleado?\")){\n      this.gserv.empleado = empleado;\n      this.gserv.eliminarempleado().subscribe(res => {\n        this.toastr.info('Empleado eliminado!','Gestion empleado');\n        this.gserv.listaEmpleados();\n      },err=>{\n        this.toastr.warning('El empleado no fue eliminado!','Gestion empleado');\n      })\n    }\n\n  }\n\n}\n","<form>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-text\">\n                BUSCAR\n            </div>\n            <input type=\"text\" name=\"filtrar\" [(ngModel)]=\"gserv.filtroempleado\" class=\"form-control\">\n        </div>\n    </div>\n</form>\n\n<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Direccion</th>\n            <th scope=\"col\">Telefono</th>\n            <th scope=\"col\">Email</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let empl of this.gserv.ListEmpleado | filtroempleado:'nombre':gserv.filtroempleado\">\n            <td scope=\"row\" (click)=\"editarempleado(empl)\">{{empl.idEmpleado}}</td>\n            <td (click)=\"editarempleado(empl)\">{{empl.nombre}}</td>\n            <td (click)=\"editarempleado(empl)\">{{empl.direccion}}</td>\n            <td (click)=\"editarempleado(empl)\">{{empl.telefono}}</td>\n            <td (click)=\"editarempleado(empl)\">{{empl.email}}</td>\n            <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"eliminarempleado(empl)\">Delete</button></td>\n        </tr>\n\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { EmpleadoService } from '../../../../servicios/empleado.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Empleado } from '../../../../models/empleado';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-registrar-empleado',\n  templateUrl: './registrar-empleado.component.html',\n  styleUrls: ['./registrar-empleado.component.scss']\n})\nexport class RegistrarEmpleadoComponent implements OnInit {\n\n  \n\n  constructor(public gserv:EmpleadoService, private frm:FormBuilder, private toastr:ToastrService) {\n    \n  }\n  \n  ngOnInit(): void {\n    this.gserv.FormEmpleado = this.frm.group({\n      idEmpleado:[0],\n      nombre:[\"\",[Validators.required,Validators.pattern(environment.expRlet)]],\n      direccion:[\"\",[Validators.maxLength(this.dirlength)]],\n      telefono:[\"\",[Validators.pattern(environment.expRNum),Validators.minLength(this.tellength)]],\n      email:[\"\",[Validators.required,Validators.email]]\n    })\n  }\n  Onsubmit(){\n    this.gserv.empleado = this.gserv.FormEmpleado.value\n\n    if(this.gserv.empleado.idEmpleado == 0 || this.gserv.empleado.idEmpleado == null){\n      this.GuardarEmpleado();\n    }else{\n      this.EditarEmpleado();\n    }\n  }\n  GuardarEmpleado(){\n    this.gserv.saveEmpleado().subscribe(res => {\n      this.gserv.FormEmpleado.reset();\n      //console.log(\"Empleado Guardado\")\n      this.toastr.success('Empleado guardo!','Gestion empleado');\n      this.ngOnInit()\n      this.gserv.listaEmpleados();\n    },err =>{\n      this.toastr.warning( 'Empleado no se guardo!','Gestion empleado');\n      console.log(err)\n    })\n  }\n\n  EditarEmpleado(){\n    this.gserv.editarEmpleado().subscribe(res =>{\n      this.gserv.FormEmpleado.reset();\n      //console.log(\"Empleado Guardado\")\n      this.toastr.info('Empleado editado!','Gestion empleado');\n      this.ngOnInit()\n      this.gserv.listaEmpleados();\n    },err =>{\n      this.toastr.warning('El empleado no se edito!','Gestion empleado');\n      console.log(err)\n    })\n  }\n\n  \n  tellength:number = 10\n  dirlength:number = 40\n\n  get nombre(){\n    return this.gserv.FormEmpleado.controls[\"nombre\"]\n  }\n  get direccion(){\n    return this.gserv.FormEmpleado.controls[\"direccion\"]\n  }\n  get telefono(){\n    return this.gserv.FormEmpleado.controls[\"telefono\"]\n  }\n  get email(){\n    return this.gserv.FormEmpleado.controls[\"email\"]\n  }\n\n}\n","<form [formGroup]=\"this.gserv.FormEmpleado\" (ngSubmit)=\"Onsubmit()\">\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input type=\"hidden\" name=\"IdEmpleado\">\n            <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" [class.border-success]=\"nombre.valid\" [class.border-danger]=\"nombre.invalid && nombre.touched\" placeholder=\"nombre\">\n        </div>\n        <div *ngIf=\"nombre.invalid && nombre.touched || nombre.dirty\" class=\"form-control alert alert-warning\" [class.d-none]=\"nombre.valid\">\n            <p *ngIf=\"nombre.hasError('required')\">Campo requerido</p>\n            <p *ngIf=\"nombre.hasError('pattern')\">Campo solo debe contener Letras</p>\n\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input type=\"text\" formControlName=\"direccion\" [class.border-success]=\"direccion.valid\" [class.border-danger]=\"direccion.invalid && direccion.touched\" class=\"form-control\" placeholder=\"Direccion\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input type=\"tel\" formControlName=\"telefono\" class=\"form-control\" [class.border-success]=\"telefono.valid\" [class.border-danger]=\"telefono.invalid && telefono.touched\" placeholder=\"Telefono\">\n        </div>\n        <div *ngIf=\"telefono.invalid && telefono.touched || telefono.dirty\" class=\"form-control alert alert-warning\" [class.d-none]=\"telefono.valid\">\n            <p *ngIf=\"telefono.hasError('pattern')\">Campo solo debe contener Letras</p>\n            <p *ngIf=\"!telefono.hasError('maxLength')\">Campo debe contener minimo {{tellength}} caracteres</p>\n            {{telefono.hasError('maxLength')}}\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" [class.border-success]=\"email.valid\" [class.border-danger]=\"email.invalid && email.touched\" placeholder=\"Email\">\n        </div>\n        <div *ngIf=\"email.invalid && email.touched || email.dirty\" class=\"form-control alert alert-warning\" [class.d-none]=\"email.valid\">\n            <p *ngIf=\"email.hasError('required')\">Campo requerido</p>\n            <p *ngIf=\"email.hasError('email')\">Campo debe ser de tipo Email</p>\n\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button type=\"submit\" [disabled]=\"this.gserv.FormEmpleado.invalid\" class=\"btn btn-primary btn-lg btn-black\"><i class=\"fa fa-save\"></i> Aceptar</button>\n    </div>\n\n\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../servicios/project.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-form-project',\n  templateUrl: './form-project.component.html',\n  styleUrls: ['./form-project.component.scss']\n})\nexport class FormProjectComponent implements OnInit {\n  @Input() Proj:Project;\n  fields:boolean = true;\n  constructor(private proj:ProjectService,private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  updatepriority(p:Project){\n    console.log(p)\n    \n    this.proj.updateProject(p).subscribe(res => {\n      console.log(res)\n      this.toastr.success('Proyecto actualizado!','Project');\n    },err=>{\n      this.toastr.warning('Proyecto no actualizado!','Project');\n    })\n  }\n\n}\n","<form class=\"border p-3\">\n    <fieldset [disabled]=\"fields\">\n        <div class=\"form-group\">\n            <label>Cust code</label>\n            <input class=\"form-control\" type=\"text\" [ngModel]=\"Proj.custcode\" name=\"custcode\">\n        </div>\n        <div class=\"form-group\">\n            <label>Cust name</label>\n            <input class=\"form-control\" type=\"text\" [ngModel]=\"Proj.custname\" name=\"custname\">\n        </div>\n        <div class=\"form-group\">\n            <label>Proj code</label>\n            <input class=\"form-control\" type=\"text\" [ngModel]=\"Proj.projcode\" name=\"projcode\">\n        </div>\n        <div class=\"form-group\">\n            <label>Proj name</label>\n            <input class=\"form-control\" type=\"text\" [ngModel]=\"Proj.projname\" name=\"projname\">\n        </div>\n    </fieldset>\n    <div class=\"form-group\">\n        <label>Expir date</label>\n        <input class=\"form-control\" type=\"datetime-local\" pattern=\"yyyy-MM-dd\" [(ngModel)]=\"Proj.expirdate\" name=\"expirdate\" value=\"{{Proj.expirdate | date:'yyyy-MM-dd'}}\">\n    </div>\n    <div class=\"form-group\">\n        <label>Priority</label>\n        <input class=\"form-control\" type=\"number\" min=\"1\" max=\"10\" [(ngModel)]=\"Proj.priority\" name=\"priority\">\n    </div>\n    <div class=\"col-12 p-3 text-center\">\n        <button *ngIf=\"Proj.custcode\" (click)=\"updatepriority(Proj)\" class=\"m-1 btn btn-success btn-block\">Save</button>\n    </div>\n\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Segment } from '../../models/segment';\nimport { SegmentService } from '../../servicios/segment.service';\nimport { ListadoComponent } from '../listado/listado.component';\n//import { ListadoComponent } from '../listado/listado.component';\n\n\n@Component({\n  selector: 'app-form-segment',\n  templateUrl: './form-segment.component.html',\n  styleUrls: ['./form-segment.component.scss']\n})\nexport class FormSegmentComponent implements OnInit {\n\n  @Input() istext: Segment;\n  @Input() val: Number;\n\n  h1:Date;\n  h2:Date;\n  \n  fields:string;\n  buttons:string;\n  flgdis:number;\n\n  msg:string;\n  classmsg:string;\n\n  \n  constructor(private serv:SegmentService,private list:ListadoComponent) {\n    this.fields = 'disabled';\n    this.msg ='';\n    this.classmsg='';\n   }\n\n  ngOnInit(): void { }\n\n  SetSegment(seg:Segment){\n    this.fields = 'disabled';\n    this.serv.setScheduleSegment(seg);\n    \n  }\n\n  newSegment(seg:Segment){\n    this.fields = 'disabled';\n    seg.timeId = seg.timeId+1;\n    this.serv.newScheduleSegment(seg);\n    //this.list.texts.push(seg);\n    \n    this.list.texts.splice(this.list.texts.indexOf(seg),0,seg);\n\n  }\n\n  deleteSegment(seg:Segment){\n    this.fields = 'disabled';\n    this.serv.deleteScheduleSegment(seg).subscribe(res => {\n        \n        this.alertmessage(\"El segmento se ha eliminado\",\"success\");\n        this.list.texts.splice(this.list.texts.indexOf(seg),1);\n    },\n    err =>{\n      console.log(err.status);\n      if (err.status=400){\n        this.alertmessage(\"No se puede eliminar el segmento\",\"danger\");\n        \n      }      \n    });\n\n    \n  }\n\n  changeDisabled(){\n    if (this.flgdis == 1){\n      this.flgdis = 0\n      this.fields = 'disabled';\n      this.buttons = '';\n    } else {\n      this.flgdis = 1\n    this.fields = '';\n    this.buttons = 'disabled';\n    }\n    \n  }\n\n  alertmessage(msg:string,clsmsg:string){\n    this.msg=msg;\n    this.classmsg=clsmsg;\n    setTimeout(()=>{\n      this.msg=\"\";\n        this.classmsg=\"\";\n    },4000);\n  }\n\n}\n","<div class=\"col-12 p-1 align-middle text-right\">\r\n    <a (click)=\"changeDisabled()\" class=\" btn btn-success\">Create</a>\r\n</div>\r\n<fieldset [disabled]=\"fields\">\r\n    <div class=\"row p-2 align-items-center\">\r\n        <div class=\"col-4\">\r\n            <label for=\"scheduleday\" class=\"col-form-label\">Schedule Day</label>\r\n        </div>\r\n        <div class=\"col-8\">\r\n            <input type=\"datetime-local\" id=\"scheduleday\" class=\"form-control\" [(ngModel)]=\"istext.scheduleDay\" value=\"{{istext.scheduleDay | date:'yyyy-MM-ddTHH:mm'}}\">\r\n        </div>\r\n    </div>\r\n    <div class=\"row p-2 align-items-center\">\r\n        <div class=\"col-4\">\r\n            <label for=\"priority\" class=\"col-form-label\">Priority</label>\r\n        </div>\r\n        <div class=\"col-8\">\r\n            <input type=\"number\" max=\"10\" min=\"1\" id=\"priority\" class=\"form-control\" [(ngModel)]=\"istext.priority\" value=\"{{istext.priority}}\">\r\n        </div>\r\n    </div>\r\n    <div class=\"row p-2 align-items-center\">\r\n        <div class=\"col-4\">\r\n            <label for=\"timeid\" class=\"col-form-label\">Time ID</label>\r\n        </div>\r\n        <div class=\"col-8\">\r\n            <input type=\"number\" max=\"10\" min=\"1\" id=\"timeid\" class=\"form-control\" [(ngModel)]=\"istext.timeId\" value=\"{{istext.timeId}}\">\r\n        </div>\r\n    </div>\r\n</fieldset>\r\n<div class=\"row p-2 align-items-center\">\r\n    <div class=\"col-4\">\r\n        <label for=\"hstart\" class=\"col-form-label\">Schedule Start</label>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <input type=\"datetime-local\" id=\"hstart\" class=\"form-control\" [(ngModel)]=\"istext.hourStart\" value=\"{{istext.hourStart | date:'yyyy-MM-ddTHH:mm'}}\">\r\n    </div>\r\n</div>\r\n<div class=\"row p-2 align-items-center\">\r\n    <div class=\"col-4\">\r\n        <label for=\"hend\" class=\"col-form-label\">Schedule End</label>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <input type=\"datetime-local\" id=\"hend\" class=\"form-control\" [(ngModel)]=\"istext.hourEnd\" value=\"{{istext.hourEnd | date:'yyyy-MM-ddTHH:mm'}}\">\r\n    </div>\r\n</div>\r\n<div class=\"row p-2 align-items-center\">\r\n    <div class=\"col-4\">\r\n        <label for=\"percentage\" class=\"col-form-label\">Over Booking</label>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"input-group\">\r\n            <span class=\"input-group-text\">{{val}} %</span>\r\n            <input type=\"range\" class=\"form-control\" min=\"0\" max=\"1\" step=\"0.1\" [(ngModel)]=\"istext.overBooking\" value=\"{{istext.overBooking}}\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-12 p-3 text-center\">\r\n        <fieldset [disabled]=\"buttons\">\r\n\r\n            <button (click)=\"SetSegment(istext)\" class=\" m-1 btn btn-success\" [disabled]=\"buttons\">Save</button>\r\n            <button (click)=\"newSegment(istext)\" class=\" m-1 btn btn-secondary\" [disabled]=\"buttons\">New</button>\r\n            <button (click)=\"deleteSegment(istext)\" class=\" m-1 btn btn-danger\" [disabled]=\"buttons\">Delete</button>\r\n        </fieldset>\r\n\r\n        <div *ngIf=\"msg\" class=\"alert alert-{{classmsg}}\" role=\"alert\">\r\n            {{msg}}\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormSegmentComponent } from '../form-segment/form-segment.component';\nimport { Segment } from '../../models/segment';\nimport { SegmentService } from '../../servicios/segment.service';\nimport { formatDate } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n\n@Component({\n  providers:[FormSegmentComponent],\n  selector: 'app-listado',\n  templateUrl: './listado.component.html',\n  styleUrls: ['./listado.component.scss']\n})\nexport class ListadoComponent implements OnInit {\n\n  val:string;\n  \n  texts:Segment[];\n  \n  istext:Segment = {scheduleDay:null,priority:null,segmentCode:null,timeId:null,hourStart:null,hourEnd:null,overBooking:null,isActive:null};\n  \n  res:any;\n\n  scheduleDay:Date;\n  minfecha:Date;\n  maxfecha:Date;\n  fecha:string;\n\n  priority:number;\n  timeid:number;\n\n  \n  segs$: Observable<Segment[]>;\n  private segmetns$ = new Subject<Segment[]>();\n  \n\n  constructor(private serv:SegmentService) { \n    this.scheduleDay = new Date();\n    this.minfecha = new Date();\n    this.minfecha.setDate(this.minfecha.getDate()+1);\n    this.fecha = formatDate(this.minfecha,'yyyy-MM-dd','en');\n    this.maxfecha = new Date();\n    this.maxfecha.setDate(this.maxfecha.getDate()+15);\n    \n    \n   }\n\n  ngOnInit() {\n    this.listarsegment(this.scheduleDay.toISOString(),this.priority);\n  }\n\n  counter(i:number){\n    return new Array(i);\n  }\n\n  hoursegmentation(valid:number,hstart:Date,hend:Date){\n    var hsg:number;\n    \n    hstart = new Date(hstart);\n    hend = new Date(hend);\n\n\n    //console.log(hstart.getHours(),hend.getHours())\n    switch (valid) {\n      case 1:\n        //calcular diferencia 0\n        hsg = hstart.getHours();  \n        break;\n      case 2:\n      //calcular diferencia end-start\n        hsg = hend.getHours()-hstart.getHours();  \n        break;\n      case 3:\n        //calcular diferencia 24\n        hsg = 24-hend.getHours();\n        break; \n    }\n    \n    //console.log(hstart.getHours(),hend.getHours(),valid,hsg);\n    // return\n    return hsg;\n  }\n\n  listarsegment(fecha:string,priority:number){\n\n    console.log(priority)\n    this.serv.getScheduleSegment(new Date(fecha),priority,null).subscribe(segs => this.texts = segs);\n  }\n\n  \n  mostrar(text:Segment){\n    //this.fs.mostrar(text);\n    this.istext = text;\n    //this.fseg.mostrar(this.text);\n\n  }\n\n}\n","<div class=\"row p-5\">\n    <div class=\"col-sm-12 col-xl-4\">\n        <app-form-segment [istext]=\"istext\" [val]=\"istext.overBooking*100\"></app-form-segment>\n    </div>\n    <div class=\"col-xl-8 col-sm-12 p-3\">\n        <div class=\"form-group\">\n            <input type=\"date\" id=\"date\" class=\"form-control\" [(ngModel)]=\"fecha\" value=\"{{fecha | date:'yyyy-MM-dd'}}\" min=\"{{ minfecha | date:'yyyy-MM-dd' }}\" max=\"{{ maxfecha | date:'yyyy-MM-dd' }}\" (ngModelChange)=\"listarsegment(fecha,priority)\">\n            <select class=\"custom-select\" id=\"inputGroupSelect01\" [(ngModel)]=\"priority\" (ngModelChange)=\"listarsegment(fecha,priority)\">\n                    <option selected value=\"\">Choose...</option>\n                    <option *ngFor=\"let in of counter(10);let i = index\" value=\"{{i+1}}\">{{i+1}}</option>\n                  </select>\n        </div>\n        <table class=\"table table-sm table-bordered\">\n            <thead>\n                <th>Segment</th>\n                <th *ngFor=\"let in of counter(24);let i = index\">{{i}}</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let text of texts\">\n                    <td scope=\"col\" colspan=\"1\"><b>Priority:</b> {{text.priority}}</td>\n                    <td scope=\"col\" [attr.colspan]=\"hoursegmentation(1,text.hourStart,text.hourEnd)\" *ngIf=\"hoursegmentation(1,text.hourStart,text.hourEnd)>0\"></td>\n                    <td scope=\"col\" [attr.colspan]=\"hoursegmentation(2,text.hourStart,text.hourEnd)\" *ngIf=\"hoursegmentation(2,text.hourStart,text.hourEnd)>0\" (click)=\"mostrar(text)\" class=\"bg-success\"></td>\n                    <td scope=\"col\" [attr.colspan]=\"hoursegmentation(3,text.hourStart,text.hourEnd)\" *ngIf=\"hoursegmentation(3,text.hourStart,text.hourEnd)>0\"></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../servicios/project.service';\nimport { DtoSearchProject } from '../../models/dto-search-project';\n\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n  \n  projects:Project[];\n  \n  _Proj:Project = {custcode:null,projcode:null,custname:null,projname:null,priority:null,expirdate:null,active:null};\n  res:any;\n\n  search:DtoSearchProject;\n\n  constructor(private proj:ProjectService) { }\n\n  ngOnInit(): void {\n    this.search = {Custcode:\"\",Projcode:\"\",Custname:\"\",Projname:\"\",Limit:10,Min:0,Max:10};\n    this.listarprojects();\n  }\n\n  counter(i:number){\n    return new Array(i);\n  }\n\n  listarprojects(){\n    this.proj.getProjects(this.search).subscribe(projs => {\n      console.log(typeof projs[0].expirdate)\n      this.projects = projs\n    }); \n  }\n\n  searchproject(){\n    this.search.Limit = +this.search.Limit\n    console.log(this.search.Limit)\n    this.listarprojects();\n  }\n\n  loadproject(p:Project){\n    console.log('load',p)\n    this._Proj = p;\n  }\n\n}\n","<div class=\"row p-5\">\n    <div class=\"col-xl-8 col-sm-12 p-3\">\n        <div class=\"form-group\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"\">Search</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"search.Custcode\" placeholder=\"Cust code\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"search.Projcode\" placeholder=\"Proj code\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"search.Custname\" placeholder=\"Cust name\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"search.Projname\" placeholder=\"Proj name\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-success\" (click)=\"searchproject()\" type=\"button\">Button</button>\n                </div>\n\n            </div>\n\n        </div>\n        <table class=\"table table-sm \">\n            <thead>\n                <th>Cust Code</th>\n                <th>Cust Name</th>\n                <th>Proj Code</th>\n                <th>Proj Name</th>\n                <th>Expir Date</th>\n                <th>Active</th>\n                <th>Priority</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let proj of projects\" (click)=\"loadproject(proj)\">\n                    <td>{{proj.custcode}}</td>\n                    <td>{{proj.custname}}</td>\n                    <td>{{proj.projcode}}</td>\n                    <td>{{proj.projname}}</td>\n                    <td>{{proj.expirdate | date:'yyyy-MM-dd'}}</td>\n                    <td>{{proj.active}}</td>\n                    <td>{{proj.priority}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"col-sm-12 col-xl-4\">\n        <app-form-project [Proj]=\"_Proj\"></app-form-project>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../../../servicios/usuario.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n  constructor(public usuarioservice:UsuarioService,private toastr:ToastrService,private router:Router) { }\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.usuarioservice.login().subscribe((res:any) => {\n      console.log(res.token)\n      localStorage.setItem('token',res.token)\n      localStorage.setItem('validTo',res.expiration)\n      this.reload('empleado')\n      this.loadperfil(res.token)\n      //this.router.navigateByUrl('empleado',{ skipLocationChange: true })\n    },(err:any)=>{\n      console.log(err)\n      this.toastr.error(\"Se ha presentado un error iniciando sesión\",\"Login Fallido\")\n      this.toastr.error(err.message,\"Login Fallido\")\n\n    })\n  }\n\n  async reload(url: string): Promise<boolean> {\n    \n    await this.router.navigateByUrl(url, { skipLocationChange: true });\n    return this.router.navigate([url]);\n  }\n\n  async loadperfil(token: string) {\n    await this.usuarioservice.InfoUsuario(token);\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset p-5\">\n        <form class=\"text-center rounded border border-success p-5\" [formGroup]=\"this.usuarioservice.formularioLogin\" (ngSubmit)=\"this.onSubmit()\">\n            <p class=\" h4 mb-4\"><i class=\"fa fa-user-circle fa-5x text-success\" aria-hidden=\"true\"></i></p>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fa-thin fa-user\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Usuario\" formControlName=\"Usuario\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.LoginUsuario.invalid && this.usuarioservice.LoginUsuario.touched || this.usuarioservice.LoginUsuario.dirty\" class=\"alert alert-warning\" [class.d-none]=\"this.usuarioservice.LoginUsuario.valid\">\n                <p *ngIf=\"this.usuarioservice.LoginUsuario.hasError( 'required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.LoginUsuario.hasError( 'pattern')\">Campo solo debe contener Letras</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fad fa-key\"></i></span>\n                </div>\n                <input type=\"password\" class=\"form-control\" formControlName=\"Password\" placeholder=\"Contraseña\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.LoginPassword.invalid && this.usuarioservice.LoginPassword.touched || this.usuarioservice.LoginPassword.dirty\" class=\" alert alert-warning\" [class.d-none]=\"this.usuarioservice.LoginPassword.valid\">\n                <p *ngIf=\"this.usuarioservice.LoginPassword.hasError( 'required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.LoginPassword.hasError( 'minLength') || this.usuarioservice.LoginPassword.invalid\">La contraseña debete tener minimo 6 caracteres</p>\n            </div>\n\n            <button class=\"btn btn-success my-4 btn-block\" [disabled]=\"this.usuarioservice.formularioLogin.invalid\" type=\"submit\">Iniciar Sesión</button>\n\n        </form>\n        <div class=\"mt-4\">\n            <div class=\"d-flex justify-content-center links\">\n                ¿No tienes cuenta? <a href=\"\" routerLink=\"/usuario/registro\" routerLinkActive=\"active\" class=\"ml-2\">Registrate</a>\n            </div>\n            <div class=\"d-flex justify-content-center links\">\n                ¿Olvidaste la contraseña?\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../../../servicios/usuario.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public usuarioservice:UsuarioService, private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.usuarioservice.registrarUsuario().subscribe((res:any)=>{\n      console.log(res)\n      if(res.succeeded){\n        this.usuarioservice.formregister.reset()\n        this.toastr.success(\"Usuario registrado exitosamente\")\n      }else{\n\n        res.errors.forEach(item =>{\n          switch (item.code) {\n            case 'DuplicateUserName':\n              this.toastr.warning(\"El nombre de usuario ya existe\",\"Registro Fallido\")\n              break;\n            case 'DuplicateEmail':\n              this.toastr.warning(\"El email ya se encuentra registrado\",\"Registro Fallido\")\n              break;\n            default:\n              this.toastr.error(\"Se ha producido un error al registrar el usuario\",\"Registro Fallido\")\n              break;\n          }\n        })\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-3 p-5\">\n        <form class=\"text-center rounded border border-info p-5\" [formGroup]=\"this.usuarioservice.formregister\" (ngSubmit)=\"this.onSubmit()\">\n            <p class=\"h4 mb-4\"><i class=\"fa fa-address-card fa-5x text-info\" aria-hidden=\"true\"></i></p>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fa-thin fa-user\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nombre usuario\" formControlName=\"Usuario\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.Usuario.invalid && this.usuarioservice.Usuario.touched || this.usuarioservice.Usuario.dirty\" class=\"alert alert-warning\" [class.d-none]=\"this.usuarioservice.Usuario.valid\">\n                <p *ngIf=\"this.usuarioservice.Usuario.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Usuario.hasError('pattern')\">Campo solo debe contener Letras</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fas fa-id-card\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nombre completo\" formControlName=\"Nombre\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.Nombre.invalid && this.usuarioservice.Nombre.touched || this.usuarioservice.Nombre.dirty\" class=\"alert alert-warning\" [class.d-none]=\"this.usuarioservice.Nombre.valid\">\n                <p *ngIf=\"this.usuarioservice.Nombre.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Nombre.hasError('pattern')\">Campo solo debe contener Letras</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fas fa-at\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"Email\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.Email.invalid && this.usuarioservice.Email.touched || this.usuarioservice.Email.dirty\" class=\" alert alert-warning\" [class.d-none]=\"this.usuarioservice.Email.valid\">\n                <p *ngIf=\"this.usuarioservice.Email.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Email.hasError('pattern')\">Campo solo debe contener Letras</p>\n                <p *ngIf=\"this.usuarioservice.Email.hasError('email')\">Campo debe ser de tipo Email</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fas fa-mobile\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Telefono\" formControlName=\"Telefono\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.Telefono.invalid && this.usuarioservice.Telefono.touched || this.usuarioservice.Telefono.dirty\" class=\" alert alert-warning\" [class.d-none]=\"this.usuarioservice.Telefono.valid\">\n                <p *ngIf=\"this.usuarioservice.Telefono.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Telefono.hasError('pattern')\">Campo solo debe contener Letras</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fad fa-key\"></i></span>\n                </div>\n                <input type=\"password\" class=\"form-control\" formControlName=\"Password\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.Password.invalid && this.usuarioservice.Password.touched || this.usuarioservice.Password.dirty\" class=\" alert alert-warning\" [class.d-none]=\"this.usuarioservice.Password.valid\">\n                <p *ngIf=\"this.usuarioservice.Password.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Password.hasError('minLength') || this.usuarioservice.Password.invalid\">La contraseña debete tener minimo 6 caracteres</p>\n                <p *ngIf=\"this.usuarioservice.Password.hasError('pattern')\">La contraseña debete tener entre 6 y 20 caracteres, al menos un digito, al menos una minúscula y al menos una mayúscula</p>\n            </div>\n            <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend bg-white\">\n                    <span class=\"input-group-text\"><i class=\"fa fas fa-check\"></i></span>\n                </div>\n                <input type=\"password\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n            </div>\n            <div *ngIf=\"this.usuarioservice.ConfirmPassword.invalid && this.usuarioservice.ConfirmPassword.touched || this.usuarioservice.ConfirmPassword.dirty\" class=\"alert alert-warning\" [class.d-none]=\"this.usuarioservice.ConfirmPassword.valid\">\n                <p *ngIf=\"this.usuarioservice.ConfirmPassword.hasError('required')\">Campo requerido</p>\n                <p *ngIf=\"this.usuarioservice.Password.hasError('pattern')\">La contraseña debete tener entre 6 y 20 caracteres, al menos un digito, al menos una minúscula y al menos una mayúscula</p>\n                <p *ngIf=\"this.usuarioservice.ConfirmPassword.hasError('pwdDif')\">Las contraseñas no coinciden</p>\n            </div>\n            <button class=\"btn btn-info my-4 btn-block\" [disabled]=\"this.usuarioservice.formregister.invalid\" type=\"submit\">Registrarse</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.scss']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean  {\n    \n    var token = localStorage.getItem(\"token\")\n    var expiration = localStorage.getItem(\"validTo\")\n\n    if(token!=null && expiration>Date.now().toString())\n    return true;\n    else{\n      this.router.navigate(['usuario/login']);\n      return false\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router:Router){\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if(localStorage.getItem('token') != null){\r\n            const clonedReq = req.clone({\r\n                headers:req.headers.set('Authorization','Bearer '+localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if(err.status == 401){\r\n                            localStorage.removeItem('token')\r\n                            localStorage.removeItem('validTo')\r\n                            this.router.navigateByUrl('usuario/login');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }else{\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filtroempleado'\n})\nexport class FiltroempleadoPipe implements PipeTransform {\n\n  transform(value: any, campo:string, args:string): any {\n    if(!value)return null;\n    if(!args)return value;\n    return value.filter(singleItem => singleItem[campo].toLowerCase().includes(args.toLowerCase()));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Empleado } from '../models/empleado';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadoService {\n  FormEmpleado:FormGroup;\n\n  readonly urlservice = environment.urlempleado\n\n  empleado:Empleado\n  ListEmpleado:Empleado[];\n  filtroempleado:'';\n\n  \n  constructor(private http:HttpClient) { }\n\n   saveEmpleado(){\n    return this.http.post(this.urlservice,this.empleado)\n  }\n\n  listaEmpleados(){\n    //observable\n    this.http.get(this.urlservice).toPromise().then(res=> this.ListEmpleado = res as Empleado[])\n  }\n\n  editarEmpleado(){\n    return this.http.put(this.urlservice + '/' + this.empleado.idEmpleado,this.empleado)\n  }\n\n  eliminarempleado(){\n    return this.http.delete(this.urlservice + '/' + this.empleado.idEmpleado)\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Project } from '../models/project';\r\nimport { Observable } from 'rxjs';\r\nimport { DtoSearchProject } from '../models/dto-search-project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n  private urlserv:string = environment.urlproject;\r\n\r\n  public proj:Project[];\r\n\r\n  constructor(private http:HttpClient){}\r\n\r\n  public getProjects(search:DtoSearchProject):Observable<Project[]>{\r\n    var header = {'content-type':'application/json'}\r\n    var body = JSON.stringify(search)\r\n    return this.http.post<Project[]>(this.urlserv,body,{'headers':header})\r\n  }\r\n\r\n  public updateProject(proj:Project){\r\n    var header = {'content-type':'application/json'}\r\n    var body = JSON.stringify(proj)\r\n    return this.http.post(this.urlserv+'/updatepriority',body,{headers:header})\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Segment } from '../models/segment';\nimport { stringify } from '@angular/compiler/src/util';\nimport { formatDate } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SegmentService {\n  private urlserv:string = environment.urlsegment;\n\n  public seg:Segment[];\n\n  \n  \n\n\n  constructor(private http: HttpClient) {\n    \n  }\n\n  public getScheduleSegment(Scheduleday:Date,priority:number,timeid:number):Observable<Segment[]> {\n    //Organizar URL\n    Scheduleday = new Date(Scheduleday);\n    Scheduleday.setDate(Scheduleday.getDate()+1);\n\n    var URLCustom;\n    URLCustom = this.urlserv;\n\n    if (priority != null) {\n      URLCustom = URLCustom+'/'+priority;\n      \n    } else {\n      URLCustom = URLCustom+'/';\n    }\n    if (Scheduleday != null) {\n      URLCustom = URLCustom+'?day='+ Scheduleday.toDateString();\n    } else {\n      URLCustom = URLCustom+'?day=';\n    }\n    if (timeid != null) {\n      URLCustom = URLCustom+'&timeid='+timeid;\n    } else {\n      URLCustom = URLCustom+'&timeid=';\n    }\n    \n    /*\n    this.http.get<Segment[]>(URLCustom).subscribe((res) => {\n      var s:Segment[] = res.map((x) => (\n      {\n        scheduleDay:x.scheduleDay,\n        priority:x.priority,\n        segmentCode:x.segmentCode,\n        timeId:x.timeId,\n        hourStart:x.hourStart,\n        hourEnd:x.hourEnd,\n        overBooking:x.overBooking*100,\n        isActive:x.isActive\n      }));\n      //this.texts= res;\n       return s;\n    },err=>{});\n    */\n\n    return this.http.get<any>(URLCustom);\n}\n\n\n\n  public setScheduleSegment(seg:Segment){\n    var URLCustom;\n    var header = {'content-type':'application/json'}\n    var body = JSON.stringify(seg)\n    URLCustom = this.urlserv+'/update';\n\n    this.http.post(URLCustom,body,{'headers':header}).subscribe(res =>{\n    });\n    \n  }\n\n  public newScheduleSegment(seg:Segment){\n    var URLCustom;\n    var header = {'content-type':'application/json'}\n    var body = JSON.stringify(seg)\n    URLCustom = this.urlserv+'/create';\n\n    this.http.post(URLCustom,body,{'headers':header}).subscribe(res =>{\n      \n    })\n  }\n\n  public deleteScheduleSegment(seg:Segment){\n    var URLCustom;\n    var header = {'content-type':'application/json'}\n    var body = JSON.stringify(seg)\n    URLCustom = this.urlserv+'/delete';\n\n    return this.http.post(URLCustom,body,{'headers':header})\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { Usuario } from '../models/usuario';\nimport { environment } from '../../environments/environment';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  constructor(private http:HttpClient,private formus:FormBuilder) { }\n\n  readonly urlservice = environment.urlusuario\n\n  readonly urlusuario = environment.urlperfilusuario\n\n  usuario:Usuario;\n  perfilusuario:any = {Nombre:null,Email:null,Usuario:null,Telefono:null,Password:null};\n\n  formregister:FormGroup = this.formus.group({\n    Usuario:[\"\",[Validators.required,Validators.maxLength(20),Validators.pattern(environment.expRlet)]],\n    Nombre:[\"\",[Validators.required,Validators.maxLength(40),Validators.pattern(environment.expRlet)]],\n    Email:[\"\",[Validators.required,Validators.email,Validators.maxLength(100)]],\n    Telefono:[\"\",[Validators.pattern(environment.expRNum),Validators.minLength(10)]],\n    Password:[\"\",[Validators.required,Validators.minLength(6),Validators.maxLength(20)/*,Validators.pattern(environment.expPwd)*/]],\n    ConfirmPassword:[\"\",[Validators.required]]\n  },\n  { \n    validator:this.validarConfirmPassword.bind(this)\n  })\n\n  formularioLogin:FormGroup = this.formus.group({\n    Usuario:[\"\", [Validators.required,Validators.maxLength(20),Validators.pattern(environment.expRlet)]],\n    Password:[\"\",[Validators.required,Validators.minLength(6),Validators.maxLength(20)]]\n  })\n\n  get Usuario(){\n    return this.formregister.controls[\"Usuario\"]\n  }\n  get Nombre(){\n    return this.formregister.controls[\"Nombre\"]\n  }\n  get Email(){\n    return this.formregister.controls[\"Email\"]\n  }\n  get Telefono(){\n    return this.formregister.controls[\"Telefono\"]\n  }\n  get Password(){\n    return this.formregister.controls[\"Password\"]\n  }\n  get ConfirmPassword(){\n    return this.formregister.controls[\"ConfirmPassword\"]\n  }\n\n  get LoginUsuario(){\n    return this.formularioLogin.controls[\"Usuario\"]\n  }\n  get LoginPassword(){\n    return this.formularioLogin.controls[\"Password\"]\n  }\n\n  validarConfirmPassword(formGroup:FormGroup){\n    const pwd = formGroup.get('Password');\n    const cpwd = formGroup.get('ConfirmPassword');\n\n    if(cpwd.errors == null || 'pwdDif' in cpwd)\n    if(pwd.value != cpwd.value){\n      cpwd.setErrors({pwdDif:true})\n    }else{\n      cpwd.setErrors(null)\n    }\n\n  }\n\n  registrarUsuario(){\n    this.usuario = this.formregister.value;\n    delete this.usuario['ConfirmPassword']\n    return this.http.post(this.urlservice + \"/registro\", this.usuario);\n  }\n\n  login(){\n    this.usuario = this.formularioLogin.value;\n    //eliminar propiedas no necesarias\n\n    delete this.usuario.Email\n    delete this.usuario.Nombre\n    delete this.usuario.Telefono\n\n    console.log(this.usuario)\n\n    return this.http.post(this.urlservice + \"/auth\",this.usuario)\n\n  }\n\n  InfoUsuario(token:string){\n    this.http.get(this.urlusuario,{headers:{'Authorization':'Bearer '+token}}).subscribe((res:any) => {\n      console.log(res)\n      delete this.usuario.Password\n      delete this.usuario.Telefono\n      this.perfilusuario.Nombre = res.nombre\n      this.perfilusuario.Email = res.email;\n      this.perfilusuario.Usuario = res.userName;\n      console.log(this.perfilusuario)\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  urlsegment: \"https://localhost:44399/segment\",\n  urlproject: \"https://localhost:44399/project\",\n  urlempleado: \"https://192.168.0.110:5001/api/empleado\",\n  urlusuario: \"https://192.168.0.110:5001/api/usuario\",\n  urlperfilusuario: \"https://192.168.0.110:5001/api/perfilusuario\",\n  expRlet:\"^[a-zA-Z ]*$\",\n  expRNum:\"^[0-9]*$\",\n  expPwd:\"^(?=.*\\d)(?=.*[\\u0021-\\u002b\\u003c-\\u0040])(?=.*[A-Z])(?=.*[a-z])\\S{6,19}$\",\n  expLetNum:\"^[0-9a-zA-Z]+$\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}